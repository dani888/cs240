Script started on Mon 24 Apr 2017 09:55:05 PM EDT
danwaba@itserver6:~/cs240/hw6$ ls
gettysburg.txt	hw6.doc  testcounter.c	typescript1  typescript2  wordcounter  wordcounter.c
danwaba@itserver6:~/cs240/hw6$ ls -l
total 49
-rw-r--r-- 1 danwaba cs240-1G  1458 Apr 12 22:50 gettysburg.txt
-rw-r--r-- 1 danwaba cs240-1G 26624 Apr 12 22:50 hw6.doc
-rw-r--r-- 1 danwaba cs240-1G  2287 Apr 18 17:25 testcounter.c
-rw-r--r-- 1 danwaba cs240-1G  6587 Apr 18 16:44 typescript1
-rw-r--r-- 1 danwaba cs240-1G     0 Apr 24 21:55 typescript2
-rwxr-xr-x 1 danwaba cs240-1G  7840 Apr 18 16:44 wordcounter
-rw-r--r-- 1 danwaba cs240-1G  2526 Apr 18 19:38 wordcounter.c
danwaba@itserver6:~/cs240/hw6$ cat wordcounter.c
/*
wordcounter.c cs240
Daniel. Werminghausen
unix name(danwaba)
4/19/17
*/


#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <malloc.h>
#include <stdlib.h>

#define MAXWORDLEN 30

static int max = 0;

char * getword(void);
struct wordcount_node * count(char *word, struct wordcount_node *list);
struct wordcount_node * create_new_node(void);

struct wordcount_node {
  char *word;
  int count;
  struct wordcount_node *next;  /* pointer to next node in list */
} ;

// int compare(struct wordcount_node * p, struct wordcount_node * q) {
//   return (p->count - q->count);
// }

int main(void)
{
  char *newword;
  struct wordcount_node *list;  /* Pointer to list of words seen so far */
  struct wordcount_node *cur;


  list = NULL;

  /* Read in words and count them */
  while ((newword = getword()) != NULL) {
    list = count(newword, list);
    free(newword);    /* `count' made a copy of `newword', so
           we can throw `newword' away. */
  }

  /* Print out accumulated information */
  // qsort(cur, sizeof(cur), sizeof(struct wordcount_node), (int(*)(const void *, const void *))compare);
  for (int i = 1; i <= max; i ++) {
    for (cur = list; cur != NULL; cur = cur->next) {
      if (cur->count == i) {
        printf("%s %d\n", cur->word, cur->count);
      }
    }
  }
  return 0;
}


struct wordcount_node *
count(char *word, struct wordcount_node *list)
{
  struct wordcount_node *cur;
  struct wordcount_node *newnode;

  for (cur = list; cur != NULL; cur = cur->next)
    if (strcmp(word, cur->word) == 0) {
      cur->count++;
      if (max <= cur->count)
        max = cur->count;
      return list;
    }

  /* If we're here, we didn't find the word. */

  if ((newnode = create_new_node()) == NULL) {
    // fprintf(stderr, "Out of memory.\n");
    exit(1);
  }
  newnode->next = list;

  newnode->word = strdup(word);

  newnode->count = 1;

  return newnode;
}


struct wordcount_node *
create_new_node(void)
{
  return (struct wordcount_node *) malloc(sizeof(struct wordcount_node));
}



char *
getword(void)
{
  char buf[MAXWORDLEN];
  int i = 0, c;

  /* Eat up white space that precedes a word, if any. */
  while ( isspace(c = getchar()) && c != EOF  )
    /* nothing */ ;

  if (c != EOF) ungetc(c, stdin);

  while ( !isspace(c = getchar()) && c != EOF  )
    buf[i++] = c;

  buf[i] = '\0';

  if (i == 0) return NULL;
  else  return strdup(buf);
}danwaba@itserver6:~/cs240/hw6$ gcc -m32 wordcounter.c -o wordcounter
danwaba@itserver6:~/cs240/hw6$ cat gettysburg.txt gcc -m32 wordcounter.c -o wordcounter[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccat gettysburg.txt [K
Four score and seven years ago our fathers brought forth on this
continents a new nation, conceived in Liberty, and dedicated to the
proposition that all men are created equal.  Now we are engaged in a
great civil war, testing whether that nation or any nation so
conceived and so dedicated, can long endure. We are met on a great
battle field of that war. We have come to dedicate a portion of that
field, as a final resting place for those who here gave their lives
that that nation might live. It is altogether fitting and proper that
we should do this.  But, in a larger sense, we can not dedicate we can
not consecrate  we can not hallow this ground. The brave men, living
and dead, who struggled here, have consecrated it, far above our poor
power to add or detract. The world will little note, nor long remember
what we say here, but it can never forget what they did here. It is
for us the living, rather, to be dedicated here to the unfinished work
which they who fought here have thus far so nobly advanced.  It is
rather for us to be here dedicated to the great task remaining before
us that from these honored dead we take increased devotion to that
cause for which they gave the last full measure of devotion that we
here highly resolve that these dead shall not have died in vain that
this nation, under God, shall have a new birth of freedom and that
government of the people, by the people, for the people, shall not
perish from the earth.


danwaba@itserver6:~/cs240/hw6$ ./wordcounter < gettysburg.txt 
earth 1
perish 1
by 1
government 1
freedom 1
birth 1
God 1
under 1
vain 1
died 1
resolve 1
highly 1
measure 1
full 1
last 1
cause 1
increased 1
take 1
honored 1
before 1
remaining 1
task 1
advanced 1
nobly 1
thus 1
fought 1
work 1
unfinished 1
did 1
forget 1
never 1
but 1
say 1
remember 1
nor 1
note 1
little 1
will 1
world 1
detract 1
add 1
power 1
poor 1
above 1
consecrated 1
struggled 1
brave 1
ground 1
hallow 1
consecrate 1
sense 1
larger 1
But 1
do 1
should 1
proper 1
fitting 1
altogether 1
live 1
might 1
lives 1
their 1
those 1
place 1
resting 1
final 1
as 1
portion 1
come 1
battle 1
met 1
endure 1
any 1
whether 1
testing 1
civil 1
engaged 1
Now 1
equal 1
created 1
all 1
proposition 1
Liberty 1
continents 1
forth 1
brought 1
fathers 1
ago 1
years 1
seven 1
score 1
Four 1
devotion 2
these 2
from 2
which 2
be 2
rather 2
what 2
far 2
it 2
living 2
The 2
gave 2
dedicate 2
field 2
We 2
long 2
or 2
war 2
men 2
conceived 2
new 2
on 2
our 2
people 3
shall 3
us 3
they 3
dead 3
is 3
It 3
who 3
so 3
great 3
are 3
dedicated 4
in 4
this 4
not 5
for 5
have 5
of 5
can 5
nation 5
and 6
a 7
here 8
we 8
to 8
the 9
that 13
danwaba@itserver6:~/cs240/hw6$ exit
exit

Script done on Mon 24 Apr 2017 09:56:28 PM EDT
